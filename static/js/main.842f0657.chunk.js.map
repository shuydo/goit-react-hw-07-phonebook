{"version":3,"sources":["redux/slices/contacts.js","redux/store.js","Comps/ContactForm/ContactForm.js","Comps/ContactList/ContactList.js","App.js","index.js"],"names":["contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","initState","name","number","ContactForm","useState","form","setForm","inputHandler","e","target","value","onSubmit","preventDefault","type","pattern","title","required","onChange","ContactList","contacts","data","isFetching","isDeleting","isLoading","map","contact","onClick","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEaA,EAAcC,YAAU,CACnCC,YAAa,cACbC,UAAWC,YAAe,CACxBC,QAAS,wDAEXC,SAAU,CAAC,WACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,aAGjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,SAAAI,GAAS,MAAK,CACnBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,aAGpBC,cAAeV,EAAQK,SAAS,CAC9BH,MAAO,SAAAS,GAAU,MAAK,CACpBJ,IAAK,YACLC,OAAQ,OACRI,KAAMD,IAERF,gBAAiB,CAAC,iBAMtBI,EAGErB,EAHFqB,sBACAC,EAEEtB,EAFFsB,yBACAC,EACEvB,EADFuB,yBC7BWC,EAAQC,YAAe,CAClCC,QAAQ,eAGL1B,EAAYE,YAAcF,EAAY0B,SAEzCC,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9B5B,EAAY2B,gBAIhBE,YAAeL,EAAMM,U,gCChBfC,EAAY,CAAEC,KAAM,GAAIC,OAAQ,IAEvB,SAASC,IACtB,MAAwBC,mBAASJ,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBd,IAAjBL,EAAP,oBACMoB,EAAe,SAAAC,GAAC,OACpBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOR,KAAOO,EAAEC,OAAOC,UAQ/C,OACE,uBAAMC,SAPa,SAAAH,GACnBA,EAAEI,iBACFzB,EAAckB,GACdC,EAAQN,IAIR,UACE,sCACA,uBACEa,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRN,MAAOL,EAAKJ,KACZgB,SAAUV,IAGZ,wCACA,uBACEM,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,6iBACNC,UAAQ,EACRN,MAAOL,EAAKH,OACZe,SAAUV,IAEZ,uBACA,wBAAQM,KAAK,SAAb,4BCpCS,SAASK,IACtB,MAAuC5B,IAAzB6B,EAAd,EAAQC,KAAgBC,EAAxB,EAAwBA,WACxB,EAAmD9B,IAAnD,mBAAOV,EAAP,KAAmCyC,EAAnC,KAAwBC,UAExB,OACE,qCACGF,GAAc,2CACdF,GACC,gCACE,6CAEA,6BAEGA,EAASK,KAAI,SAAAC,GAAO,OACnB,6BACE,8BACE,iCACGA,EAAQxB,KADX,KACmBwB,EAAQvB,OAAS,cAGpC,wBAAQwB,QAAS,kBAAM7C,EAAc4C,EAAQE,KAA7C,SACGL,EAAa,cAAgB,eAP3BG,EAAQE,eCXhB,SAASC,IACtB,OACE,qCACI,2CACF,cAACzB,EAAD,IAEA,0CAEA,cAACe,EAAD,OCNNW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUtC,MAAOA,EAAjB,SACE,cAACmC,EAAD,QAGJI,SAASC,eAAe,W","file":"static/js/main.842f0657.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contactsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://60ad63bf80a61f0017330e5e.mockapi.io/api/v1/\",\r\n  }),\r\n  tagTypes: [\"Contact\"],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contact\"],\r\n    }),\r\n\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n// import {userReducer} from '.users/userSlice'\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\n// import { pokemonApi } from \"./pokemon\";\r\n\r\nimport { contactsApi } from \"../redux/slices/contacts\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // users: userReducer,\r\n    // [pokemonApi.reducerPath]: pokemonApi.reducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import { useState } from \"react\";\nimport { useCreateContactMutation } from \"../../redux/slices/contacts\";\n\nconst initState = { name: \"\", number: \"\" };\n\nexport default function ContactForm() {\n  const [form, setForm] = useState(initState);\n  const [createContact] = useCreateContactMutation();\n  const inputHandler = e =>\n    setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createContact(form);\n    setForm(initState);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Name</h3>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={form.name}\n        onChange={inputHandler}\n      />\n\n      <h3>Number</h3>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={form.number}\n        onChange={inputHandler}\n      />\n      <br></br>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","import {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from \"../../redux/slices/contacts\";\r\n\r\nexport default function ContactList() {\r\n  const { data: contacts, isFetching } = useFetchContactsQuery();\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation(); // console.log(data);\r\n\r\n  return (\r\n    <>\r\n      {isFetching && <p>Loading...</p>}\r\n      {contacts && (\r\n        <div>\r\n          <h3>ContactList</h3>\r\n\r\n          <ol>\r\n            {/* {dBase.map(el => ( */}\r\n            {contacts.map(contact => (\r\n              <li key={contact.id}>\r\n                <p>\r\n                  <span>\r\n                    {contact.name}: {contact.number + \"  \"}\r\n                  </span>\r\n                  {/* <button type=\"button\" onClick={() => dispatch(delItem(el.id))}Delete</button>  */}\r\n                  <button onClick={() => deleteContact(contact.id)}>\r\n                    {isDeleting ? \"Deleting...\" : \"Delete\"}\r\n                  </button>\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import ContactForm from \"./Comps/ContactForm/ContactForm\";\nimport ContactList from \"./Comps/ContactList/ContactList\";\n// import Filter from \"./Comps/Filter/Filter\";\n\n// import { Toaster } from \"react-hot-toaster\";\n// import { Switch, Route } from \"react-router-dom\";\n// import {Home} from \"./pages/Home\";\n\nexport default function App() {\n  return (\n    <>\n        <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      {/* <Filter /> */}\n      <ContactList />\n\n      {/* <Switch> */}\n      {/* <Route path=\"/\" exact> */}\n                                {/* <Home />  */}\n      {/* </Route> */}\n      {/* <Route path='/todos' exact>\n          <TodosPage />\n        </Route> */}\n      {/* // </Switch> */}\n      {/* <Toaster position=\"top-right\" /> */}\n    </>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Provider } from 'react-redux';\nimport {store} from \"./redux/store\";\n// console.log(store)\n// alert('ddd')\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}